@using Client_Module.ViewsTagID.Search;
@{
    ViewData["Title"] = "Search hotels";
    HotelsTagID tagIDs = new HotelsTagID();
}

<div class="text-center">
    <h1 class="display-4">Choose a hotel</h1>
</div>
<hr class="mt-1 mb-3" />
<div class="form-row align-text-bottom">
    <div class="col-md-4 my-1">
        <input type="text" class="form-control" placeholder="Hotel name" id="@tagIDs.HotelNameFilterInputID">
        <p class="px-3 m-0 small text-danger d-none" id="@tagIDs.HotelNameValidationBoxID"></p>
    </div>
    <div class="col-md-3 my-1">
        <input type="text" class="form-control" placeholder="Country" id="@tagIDs.CountryFilterInputID">
        <p class="px-3 m-0 small text-danger d-none" id="@tagIDs.CountryValidationBoxID"></p>
    </div>
    <div class="col-md-3 my-1">
        <input type="text" class="form-control" placeholder="City" id="@tagIDs.CityFilterInputID">
        <p class="px-3 m-0 small text-danger d-none" id="@tagIDs.CityValidationBoxID"></p>
    </div>
    <div class="col-md-2 my-1">
        <button type="button" class="btn btn-success w-100" id="@tagIDs.ApplyFilterBtn">Apply</button>
    </div>
</div>
@*https://www.w3schools.com/howto/howto_js_sticky_header.asp <- try to implement later on*@
<ul class="pagination justify-content-center my-3">
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerPreviousBtnID">
            <i class="fas fa-chevron-left text-dark"></i>
        </button>
    </li>
    <li class="page-item">
        <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.TopPagerInputID" style="width: 60px" type="number" min="1" value="1" />
    </li>
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerNextBtnID">
            <i class="fas fa-chevron-right text-dark"></i>
        </button>
    </li>
</ul>
<hr class="mt-3 mb-3" />
<div class="card w-100 border-0 bg-website">
    <ul class="list-group" style="list-style-type: none" id="@tagIDs.HotelDisplayListID">
    </ul>

    <ul class="pagination justify-content-center mx-auto w-100 my-3">
        <li class="page-item ml-auto">
            <button class="page-link" href="" id="@tagIDs.BottomPagerPreviousBtnID">
                <i class="fas fa-chevron-left text-dark"></i>
            </button>
        </li>
        <li class="page-item">
            <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.BottomPagerInputID" style="width: 60px" type="number" min="1" value="1" />
        </li>
        <li class="page-item">
            <button class="page-link" href="" id="@tagIDs.BottomPagerNextBtnID">
                <i class="fas fa-chevron-right text-dark"></i>
            </button>
        </li>
    </ul>
</div>

@section Scripts{
    <script src="~/js/Shared/pager.js"></script>
    <script src="~/js/Shared/serverApiManager.js"></script>
    <script src="~/js/Search/Hotels/hotelManager.js"></script>
    <script src="~/js/Search/Hotels/hotelEntry.js"></script>
    <script src="~/js/Shared/inputValidator.js"></script>
    <script>
        var apiConfig = {
            apiBaseUrl: "@ServerApiConfig.BaseUrl",
            apiTokenCookieName: "@ClientTokenCookieDefaults.AuthCookieName",
            apiTokenHeaderName: "@ServerApiConfig.TokenHeaderName"
        };

        var hotelManager = new HotelManager(apiConfig);

        var textOrEmptyValidator = (value) => {
            value = value.trim();
            var regex = /^[a-zA-Z\s]*$/;
            return regex.test(value);
        }

        var hotelNameInputValidator = new InputValidator({
            inputHandle: $("#@tagIDs.HotelNameFilterInputID"),
            errorBoxHandle: $("#@tagIDs.HotelNameValidationBoxID"),
            validationError:"Field must contain only white-space characters and letters",
            inputValidator: textOrEmptyValidator
        })
        var countryInputValidator = new InputValidator({
            inputHandle: $("#@tagIDs.CountryFilterInputID"),
            errorBoxHandle: $("#@tagIDs.CountryValidationBoxID"),
            validationError: "Field must contain only white-space characters and letters",
            inputValidator: textOrEmptyValidator
        });
        var cityInputValidator = new InputValidator({
            inputHandle: $("#@tagIDs.CityFilterInputID"),
            errorBoxHandle: $("#@tagIDs.CityValidationBoxID"),
            validationError: "Field must contain only white-space characters and letters",
            inputValidator: textOrEmptyValidator
        });

        function ValidateFilterInput() {
            var inputValidators = [
                hotelNameInputValidator,
                countryInputValidator,
                cityInputValidator
            ];
            var areValid = true;
            for (var i = 0; i < inputValidators.length; i++) {
                areValid = inputValidators[i].validate() && areValid;
            }
            return areValid;
        }

        $("#@tagIDs.ApplyFilterBtn").on("click", function () {
            pager.setPageNumber(1, true);
        });

        var pager = new Pager();
        pager.onPageChange = DisplayHotels;

        pager.addPageNumberInput($("#@tagIDs.BottomPagerInputID"));
        pager.addPageNumberInput($("#@tagIDs.TopPagerInputID"));

        $("#@tagIDs.BottomPagerNextBtnID").on("click", function () {
            if (!ValidateFilterInput()) {
                return;
            }
            var pageInput = $("#@tagIDs.BottomPagerInputID");
            pager.setPageNumber(Number(pageInput.val()) + 1);
        });
        $("#@tagIDs.BottomPagerPreviousBtnID").on("click", function () {
            if (!ValidateFilterInput()) {
                return;
            }
            var pageInput = $("#@tagIDs.BottomPagerInputID");
            pager.setPageNumber(Number(pageInput.val()) - 1);
        });
        $("#@tagIDs.BottomPagerInputID").on("change", function () {
            if (!ValidateFilterInput()) {
                $(this).val(pager.pageNumber);
                return;
            }
            pager.setPageNumber($(this).val());
        });

        $("#@tagIDs.TopPagerNextBtnID").on("click", function () {
            if (!ValidateFilterInput()) {
                return;
            }
            var pageInput = $("#@tagIDs.TopPagerInputID");
            pager.setPageNumber(Number(pageInput.val()) + 1);
        });
        $("#@tagIDs.TopPagerPreviousBtnID").on("click", function () {
            if (!ValidateFilterInput()) {
                return;
            }
            var pageInput = $("#@tagIDs.TopPagerInputID");
            pager.setPageNumber(Number(pageInput.val()) - 1);
        });
        $("#@tagIDs.TopPagerInputID").on("change", function () {
            if (!ValidateFilterInput()) {
                $(this).val(pager.pageNumber);
                return;
            }
            pager.setPageNumber($(this).val());
        });

        var hotelDisplayList = $("#@tagIDs.HotelDisplayListID");
        var pathBase = "@Context.Request.PathBase.ToString()";
        function DisplayHotels() {
            if (!ValidateFilterInput()) {
                return;
            }
            hotelDisplayList.empty();

            var loadingBox = $("<li>")
                .attr("class", "list-group-item rounded-0 m-1 mb-3 bg-light reservation-list-entry")
                .append(
                    $("<img>")
                        .attr("class", "d-block mx-auto mt-2")
                        .attr("style", "width: 75px").attr("src", `${pathBase}/resources/loading.gif`),
                    $("<p>")
                        .attr("class", "text-center h5 mt-2")
                        .text("Loading hotels page...")
                );
            hotelDisplayList.append(loadingBox);

            hotelManager.getHotels({
                pageNumber: pager.getPageNumber(),
                pageSize: pager.getPageSize(),
                hotelName: hotelNameInputValidator.val(),
                country: countryInputValidator.val(),
                city: cityInputValidator.val()
            }).then((data) => {
                if (data.length === 0) {
                    loadingBox.empty();
                    loadingBox.append(
                        $("<p>")
                            .attr("class", "h4 my-4 text-secondary text-center")
                            .text("There are no hotels on this page")
                    );
                    return;
                }
                hotelDisplayList.empty();
                for (var i = 0; i < data.length; i++) {
                    var hotelEntry = new HotelEntry({
                        hotelData: data[i],
                        hotelEntryEvents: {
                            onDetails: function (entry) {
                                window.location.href = `${pathBase}/hotels/${entry.hotelData.hotelID}`;
                            },
                            onOffers: function (entry) {
                                window.location.href = `${pathBase}/hotels/${entry.hotelData.hotelID}/offers`;
                            }
                        }
                    });
                    hotelDisplayList.append(hotelEntry.component);
                }
            }).catch((error) => {
                loadingBox.empty();
                loadingBox.append(
                    $("<p>")
                        .attr("class", "text-center text-danger h3")
                        .text("Could not fetch data from the server"),
                    $("<p>")
                        .attr("class", "text-center text-danger h5")
                        .text(error.message)
                );
            });
        }

        pager.setPageNumber(1);
    </script>
}