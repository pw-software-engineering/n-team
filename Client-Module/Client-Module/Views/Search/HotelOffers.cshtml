@using Client_Module.ViewsTagID.Search;
@model Client_Module.Models.HotelOfferSearchModel
@{
    ViewData["Title"] = "Search Offers";
    HotelOffersTagID tagIDs = new HotelOffersTagID();
}

<div class="text-center">
    <h1 class="display-4">Choose an offer</h1>
</div>
<hr class="mt-1 mb-3" />
<div class="container-fluid">
    <div class="row">
        <div class="form-inline d-inline-block col-md-6 my-1">
            <div class="input-group m-0 flex-wrap-nowrap">
                <div class="input-group-prepend">
                    <div class="input-group-text bg-light font-weight-500">From :</div>
                </div>
                <input type="date" class="form-control w-100" id="@tagIDs.FilterFromTimeInputID" value="@DateTime.Now.ToString("yyyy-MM-dd")">
            </div>
        </div>
        <div class="form-inline d-inline-block col-md-6 my-1">
            <div class="input-group m-0 flex-wrap-nowrap">
                <div class="input-group-prepend">
                    <div class="input-group-text bg-light font-weight-500">To :</div>
                </div>
                <input type="date" class="form-control w-100" id="@tagIDs.FilterToTimeInputID" value="@DateTime.Now.ToString("yyyy-MM-dd")">
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-inline d-inline-block col-md-4 my-1">
            <div class="input-group m-0 flex-wrap-nowrap">
                <div class="input-group-prepend">
                    <div class="input-group-text bg-light font-weight-500">Min. cost :</div>
                </div>
                <input type="number" class="form-control w-100" placeholder="" id="@tagIDs.FilterMinCostInputID">
            </div>
        </div>
        <div class="form-inline d-inline-block col-md-4 my-1">
            <div class="input-group m-0 flex-wrap-nowrap">
                <div class="input-group-prepend">
                    <div class="input-group-text bg-light font-weight-500">Max. cost :</div>
                </div>
                <input type="number" class="form-control w-100" placeholder="" id="@tagIDs.FilterMaxCostInputID">
            </div>
        </div>
        <div class="form-inline d-inline-block col-md-4 my-1">
            <div class="input-group m-0 flex-wrap-nowrap">
                <div class="input-group-prepend">
                    <div class="input-group-text bg-light font-weight-500">Min. guests :</div>
                </div>
                <input type="number" min="1" max="10" class="form-control w-100" id="@tagIDs.FilterMinGuestsInputID">
            </div>
        </div>
    </div>
    <div class="row w-100 m-0">
        <button class="mx-auto my-1 btn btn-success" id="@tagIDs.ApplyFilterBtn">Apply filter</button>
    </div>
</div>

@*https://www.w3schools.com/howto/howto_js_sticky_header.asp <- try to implement later on*@
<ul class="pagination justify-content-center my-3">
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerPreviousBtnID">
            <i class="fas fa-chevron-left text-dark"></i>
        </button>
    </li>
    <li class="page-item">
        <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.TopPagerInputID" style="width: 60px" type="number" min="1" value="1" />
    </li>
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerNextBtnID">
            <i class="fas fa-chevron-right text-dark"></i>
        </button>
    </li>
</ul>
<hr class="mt-3 mb-3" />
<div class="card w-100 border-0 bg-website">
    <ul class="list-group" id="@tagIDs.HotelOffersListID">


        <li class="list-group-item rounded-0 m-1 mb-3 bg-light reservation-list-entry">
            <div>
                <p class="m-0 text-align-center"><i style="font-size: 22px">Example offer name</i></p>
            </div>
            <hr class="my-1 border-secondary" />
            @*justify-content-center to horizontally center flex items after they're wrapped*@
            <div class="d-flex flex-row flex-wrap justify-content-center">
                <div class="flex-grow-0 p-2">
                    <div class="d-block rounded mx-auto" style="width: 260px; height: 200px; background-color: red"></div>
                </div>
                <div class="flex-grow-1 p-2 d-flex flex-column">
                    <p class="mb-2 mx-1" style="font-size: 19px"><b>Max. number of guests: </b><span class="mx-2">4</span></p>
                    <b class="m-1" style="font-size: 19px">Cost per person:</b>
                    <ul class="pl-4 mb-2 list-unstyled">
                        <li>
                            <i class="fas fa-user-tie mx-2"></i>
                            <span class="m-0"><span style="color: gray">Adults: </span><span class="mx-3">125 zł</span></span>
                        </li>
                        <li>
                            <i class="fas fa-child mx-2"></i>
                            <span class="m-0"><span style="color: gray">Children:</span><span class="mx-3">67 zł</span></span>
                        </li>
                    </ul>
                    <button class="w-100 btn btn-secondary mt-auto">Find out more<i class="ml-2 fas fa-chevron-right"></i></button>
                </div>
            </div>
        </li>

        <li class="list-group-item rounded-0 m-1 mb-3 bg-light reservation-list-entry">
            <div>
                <p class="m-0 text-align-center"><i style="font-size: 22px">Example offer name</i></p>
            </div>
            <hr class="my-1 border-secondary" />

            <small class="d-block text-secondary mt-1">(Offer ID: 42)</small>
            @*justify-content: center to horizontally center flex items after they're wrapped*@
            <div class="d-flex flex-row" style="flex-wrap: wrap; justify-content: center">
                <div class="flex-grow-0 p-2">
                    <div class="d-block rounded mx-auto" style="width: 260px; height: 200px; background-color: red"></div>
                </div>
                <div class="flex-grow-1 p-2">
                    <p class="flex-grow-1 mb-2 mx-1" style="font-size: 19px"><b>Max. number of guests: </b><span class="mx-2">4</span></p>
                    <b class="m-1" style="font-size: 19px">Cost per person:</b>
                    <ul class="pl-4" style="list-style-type: none">
                        <li>
                            <i class="fas fa-user-tie mx-2"></i>
                            <span class="m-0"><span style="color: gray">Adults:</span><span class="mx-3">125 zł</span></span>
                        </li>
                        <li>
                            <i class="fas fa-child mx-2"></i>
                            <span class="m-0"><span style="color: gray">Children:</span><span class="mx-3">67 zł</span></span>
                        </li>
                    </ul>
                    <button class="w-100 my-2 btn btn-secondary mt-4">Find out more<i class="ml-2 fas fa-chevron-right"></i></button>
                </div>
            </div>
        </li>

    </ul>

    <ul class="pagination justify-content-center mx-auto w-100 my-3">
        <li class="page-item ml-auto">
            <button class="page-link" href="" id="@tagIDs.BottomPagerPreviousBtnID">
                <i class="fas fa-chevron-left text-dark"></i>
            </button>
        </li>
        <li class="page-item">
            <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.BottomPagerInputID" style="width: 60px" type="number" min="1" value="1" />
        </li>
        <li class="page-item">
            <button class="page-link" href="" id="@tagIDs.BottomPagerNextBtnID">
                <i class="fas fa-chevron-right text-dark"></i>
            </button>
        </li>
    </ul>
</div>

@section Scripts {
    <script src="~/js/Search/HotelOffers/hotelOfferEntry.js"></script>
    <script src="~/js/Search/HotelOffers/hotelOffersManager.js"></script>
    <script src="~/js/Shared/inputValidator.js"></script>
    <script src="~/js/Shared/pager.js"></script>
    <script>
        $(document).ready(function () {
            var hotelID = @Model.HotelID;
            var apiConfig = {
                apiBaseUrl: "@ServerApiConfig.BaseUrl",
                apiTokenCookieName: "@ClientTokenCookieDefaults.AuthCookieName",
                apiTokenHeaderName: "@ServerApiConfig.TokenHeaderName"
            }

            var hotelOffersManager = new HotelOffersManager({
                hotelID: hotelID,
                apiConfig: apiConfig
            });

            var pager = new Pager((pageNumber, pageSize) => {

            });

            var fromTimeInput = $("#@tagIDs.FilterFromTimeInputID");
            var toTimeInput = $("#@tagIDs.FilterToTimeInputID");

            fromTimeInput.focusout(function () {
                var input = $(this);
                var inputData = input.val();
                if (!inputData) {
                    input.val(new Date().toISOString().split('T')[0]);
                    return;
                }
                if (new Date(inputData) > new Date(toTimeInput.val())) {
                    toTimeInput.val(inputData);
                }
                console.log(inputData);
            });

            toTimeInput.focusout(function () {
                var input = $(this);
                var inputData = input.val();
                if (!inputData) {
                    input.val(new Date().toISOString().split('T')[0]);
                    return;
                }
                if (new Date(inputData) < new Date(fromTimeInput.val())) {
                    fromTimeInput.val(inputData);
                }
                console.log(inputData);
            });

            $("#@tagIDs.ApplyFilterBtn").on('click', function () {

            })

            var hotelOffersList = $("#@tagIDs.HotelOffersListID");
            async function DisplayHotelOffers() {
                hotelOffersList.empty();
                try {
                    var data = await hotelOffersManager.getHotelOffers({
                        from: "2010-01-01",
                        to: "2012-02-27"
                    });
                } catch (error) {
                    console.log("[DisplayHotelOffers] catch block #1");
                    console.log(error);
                    return;
                }
                for (var i = 0; i < data.length; i++) {
                    var hotelOfferEntry = new HotelOfferEntry({
                        hotelOfferData: data[i]
                    });
                    hotelOffersList.append(hotelOfferEntry.component);
                }
            }
            DisplayHotelOffers();
        });
    </script>
}