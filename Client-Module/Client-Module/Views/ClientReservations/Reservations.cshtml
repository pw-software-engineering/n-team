@using Client_Module.ViewsTagID.ClientReservations; 
@{
    ViewData["Title"] = "Reservations";
    ClientReservationsTagID tagIDs = new ClientReservationsTagID();
}

<div class="text-center">
    <h1 class="display-4">Your reservations</h1>
</div>
<hr class="mt-1 mb-3" />
<ul class="pagination justify-content-center my-3">
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerPreviousBtnID">
            <i class="fas fa-chevron-left text-dark"></i>
        </button>
    </li>
    <li class="page-item">
        <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.TopPagerInputID" style="width: 60px" type="number" min="1" value="1" />
    </li>
    <li class="page-item">
        <button class="page-link" href="" id="@tagIDs.TopPagerNextBtnID">
            <i class="fas fa-chevron-right text-dark"></i>
        </button>
    </li>
</ul>
<hr class="my-3" />
<div class="card w-100 border-0 mt-3 bg-website">
    <ul class="list-group bg-website reservation-list" id="@tagIDs.ReservationsListID">

    </ul>

    <ul class="pagination justify-content-center mx-auto w-100 my-3">
        <li class="page-item ml-auto">
            <button class="page-link" href="" id="@tagIDs.BottomPagerPreviousBtnID">
                <i class="fas fa-chevron-left text-dark"></i>
            </button>
        </li>
        <li class="page-item">
            <input class="page-link text-dark text-center font-weight-bold p-2" id="@tagIDs.BottomPagerInputID" style="width: 60px" type="number" min="1" value="1" />
        </li>
        <li class="page-item">
            <button class="page-link" href="" id="@tagIDs.BottomPagerNextBtnID">
                <i class="fas fa-chevron-right text-dark"></i>
            </button>
        </li>
    </ul>
</div>

<div class="modal fade" id="@tagIDs.ModalReservationReviewID" data-backdrop="static" tabindex="-1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Your review</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="text-danger small mb-1 rating-valid-box text-center w-100 d-none">Rating field include a number between 1 and 5</p>
                <div class="d-flex flex-row w-100">
                    <label for="review-rating" class="col-form-label flex-grow-0">Rating:</label>
                    <input type="number" value="1" min="1" max="5" class="form-control flex-grow-1 ml-3" id="review-rating">
                </div>
                <hr class="mt-3 mb-0" />
                <div class="form-group">
                    <label for="review-content" class="col-form-label">Review content:</label>
                    <p class="text-danger small mb-1 text-center content-valid-box d-none"></p>
                    <textarea class="form-control" id="review-content" style="min-height: 150px"></textarea>
                </div>
            </div>
            <div class="modal-footer d-block">
                <div class="review-status-box">
                    <h5 class="text-center">
                        <img src="~/resources/loading.gif" class="my-0 mb-2" style="width: 30px; height: 30px" />
                        <span>Processing...</span>
                    </h5>
                </div>
                <button type="button" class="btn btn-danger float-right ml-3" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning review-update-btn float-right">Edit review</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="@tagIDs.ModalCancelReservationID" data-backdrop="static" tabindex="-1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-light p-2 align-items-center">
                <button type="button" class="close m-0 ml-auto p-0" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                <div class="popup-output">

                </div>
                <div class="d-flex justify-content-center popup-input">
                    <button class="btn btn-success mx-2 popup-confirm">Confirm</button>
                    <button class="btn btn-danger mx-2 popup-cancel">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/Reservations/modalConfirmPopup.js"></script>
    <script src="~/js/Reservations/reviewManager.js"></script>
    <script src="~/js/Reservations/modalReviewPopup.js"></script>
    <script src="~/js/Reservations/reservationEntry.js"></script>
    <script src="~/js/Reservations/reservationManager.js"></script>
    <script src="~/js/Reservations/reservationPresenter.js"></script>
    <script src="~/js/Reservations/pager.js"></script>
    <script>
        $(document).ready(function () {
            var apiConfig = {
                apiBaseUrl: "@ServerApiConfig.BaseUrl",
                apiTokenCookieName: "@ClientTokenCookieDefaults.AuthCookieName",
                apiTokenHeaderName: "@ServerApiConfig.TokenHeaderName"
            }

            var modalReviewPopup = new ModalReviewPopup({
                modal: $("#@tagIDs.ModalReservationReviewID")
            });

            var modalConfirmPopup = new ModalConfirmPopup({
                modal: $("#@tagIDs.ModalCancelReservationID")
            });

            var reviewManager = new ReviewManager({
                apiConfig: apiConfig,
                modalReviewPopup: modalReviewPopup,
                modalConfirmPopup: modalConfirmPopup
            });

            var reservationPresenter = new ReservationPresenter({
                reservationListDisplay: $("#@tagIDs.ReservationsListID")
            });

            var pager = new Pager();
            pager.onPageChange = async function (pageNumber, pageSize) {
                await reservationManager.loadReservationEntries(pageNumber, pageSize);
            }

            pager.addPageNumberInput($("#@tagIDs.BottomPagerInputID"));
            pager.addPageNumberInput($("#@tagIDs.TopPagerInputID"));

            $("#@tagIDs.BottomPagerNextBtnID").on("click", function () {
                var pageInput = $("#@tagIDs.BottomPagerInputID");
                pager.setPageNumber(Number(pageInput.val()) + 1);
            });
            $("#@tagIDs.BottomPagerPreviousBtnID").on("click", function () {
                var pageInput = $("#@tagIDs.BottomPagerInputID");
                pager.setPageNumber(Number(pageInput.val()) - 1);
            });
            $("#@tagIDs.BottomPagerInputID").on("change", function () {
                pager.setPageNumber($(this).val());
            });

            $("#@tagIDs.TopPagerNextBtnID").on("click", function () {
                var pageInput = $("#@tagIDs.TopPagerInputID");
                pager.setPageNumber(Number(pageInput.val()) + 1);
            });
            $("#@tagIDs.TopPagerPreviousBtnID").on("click", function () {
                var pageInput = $("#@tagIDs.TopPagerInputID");
                pager.setPageNumber(Number(pageInput.val()) - 1);
            });
            $("#@tagIDs.TopPagerInputID").on("change", function () {
                pager.setPageNumber($(this).val());
            });

            var reservationManager = new ReservationManager({
                apiConfig: apiConfig,
                reviewManager: reviewManager,
                reservationPresenter: reservationPresenter,
                modalConfirmPopup: modalConfirmPopup,
                pager: pager
            });

            pager.setPageNumber(1);

            @*

            // -------------- Cancellation management --------------------

            var currentCancelReservationRequestID = 0;

            $("#@tagIDs.ModalCancelReservationID").on('show.bs.modal', function (e) {
                var cancelReservationModal = $(this);
                var requestID = ++currentCancelReservationRequestID;
                var modalContent = cancelReservationModal.find(".modal-body");
                modalContent.empty();
                var confirmBtn = $("<button>").attr("class", "btn btn-success mx-2").text("Confirm");
                modalContent.append(
                    $("<p>")
                        .attr("class", "text-center font-weight-bold")
                        .text("Are you sure you want to cancel your reservation?"),
                    $("<div>").attr("class", "d-flex justify-content-center").append(
                        confirmBtn,
                        $("<button>")
                            .attr("class", "btn btn-danger mx-2")
                            .attr("type", "button")
                            .attr("data-dismiss", "modal")
                            .text("Cancel")
                    )
                );
                confirmBtn.on("click", function () {
                    var cancelReservationContext = cancelReservationModal.data("cancel-context");
                    modalContent.empty();
                    modalContent.append(
                        $("<h5>")
                            .attr("class", "text-center")
                            .text("Processing..."),
                        $("<img>")
                            .attr("src", "/resources/loading.gif")
                            .attr("style", "width: 50px; height: 50px")
                            .attr("class", "d-block ml-auto mr-auto")
                    );
                    $.ajax({
                        method: "DELETE",
                        url: `@ServerApiConfig.BaseUrl/api/client/reservations/${cancelReservationContext.reservationID}`,
                        headers: {
                            "@ServerApiConfig.TokenHeaderName": getCookie("@ClientTokenCookieDefaults.AuthCookieName")
                        },
                        success: (data, textStatus, jqXHR) => {
                            if (requestID !== currentCancelReservationRequestID) {
                                return;
                            }
                            modalContent.empty();
                            modalContent.append(
                                $("<h5>")
                                    .attr("class", "text-center text-success")
                                    .text("Reservation has been successfully cancelled")
                            );
                            loadReservationEntries(Pager.pageNumber, Pager.pageSize);
                        },
                        error: (jqXHR, textStatus, errorThrown) => {
                            if (requestID !== currentCancelReservationRequestID) {
                                return;
                            }
                            modalContent.empty();
                            var errorInfo = $("<h5>")
                                .attr("class", "text-center font-weight-bold text-danger");
                            if (textStatus === "timeout") {
                                errorInfo.text("Operation timed out");
                                return;
                            }
                            errorInfo.text("Error - please refresh the page");
                        }
                    });
                });
            });*@

        });
    </script>
}