{
  "Client-Module.Tests.dll": {
    "C:\\Users\\user\\.nuget\\packages\\microsoft.net.test.sdk\\16.5.0\\build\\netcoreapp2.1\\Microsoft.NET.Test.Sdk.Program.cs": {
      "AutoGeneratedProgram": {
        "System.Void AutoGeneratedProgram::Main(System.String[])": {
          "Lines": {
            "4": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\user\\source\\repos\\n-team\\Client-Module\\Client-Module.Tests\\PowerOfTests.cs": {
      "Client_Module.Tests.PowerOfTests": {
        "System.Void Client_Module.Tests.PowerOfTests::PowersOf2TrueForPowerOf2Test(System.UInt32)": {
          "Lines": {
            "29": 5
          },
          "Branches": []
        },
        "System.Void Client_Module.Tests.PowerOfTests::PowersOf4TrueForPowerOf4Test(System.UInt32)": {
          "Lines": {
            "35": 5
          },
          "Branches": []
        },
        "System.Void Client_Module.Tests.PowerOfTests::RandomNumsFalseForPowerOf2Test(System.UInt32)": {
          "Lines": {
            "40": 5
          },
          "Branches": []
        },
        "System.Void Client_Module.Tests.PowerOfTests::PowersOf2ButNot4FalseForPowerOf4Test(System.UInt32)": {
          "Lines": {
            "45": 5
          },
          "Branches": []
        },
        "System.Void Client_Module.Tests.PowerOfTests::.ctor()": {
          "Lines": {
            "23": 20
          },
          "Branches": []
        }
      },
      "Client_Module.Tests.PowerOfTests/IsPowerOf": {
        "System.Boolean Client_Module.Tests.PowerOfTests/IsPowerOf::IsPowerOfTwo(System.UInt32)": {
          "Lines": {
            "10": 24
          },
          "Branches": []
        },
        "System.Boolean Client_Module.Tests.PowerOfTests/IsPowerOf::IsPowerOfFour(System.UInt32)": {
          "Lines": {
            "12": 10,
            "13": 11,
            "15": 9,
            "16": 9,
            "17": 75,
            "19": 9,
            "20": 10
          },
          "Branches": [
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 13,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 9
            },
            {
              "Line": 16,
              "Offset": 27,
              "EndOffset": 29,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 50,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 33
            },
            {
              "Line": 16,
              "Offset": 27,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 42
            },
            {
              "Line": 17,
              "Offset": 50,
              "EndOffset": 52,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 9
            }
          ]
        }
      }
    }
  }
}