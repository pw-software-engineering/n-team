@model Hotel.ViewModels.OfferEditViewModel
@{
    ViewData["Title"] = Model.Offer.OfferTitle;
}

<h1>Edit @Model.Offer.OfferTitle</h1>
<hr />

<!-- ROOMS MODAL -->
<div class="modal fade" id="roomsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Model.Offer.OfferTitle rooms</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <nav> <!-- paging -->
                    <ul class="pagination justify-content-center">
                        <li class="page-item" id="prevPageNavItem">
                            <button id="prevPageBtn" class="page-link">
                                <span class="fa fa-chevron-left"></span>
                            </button>
                        </li>

                        <li class="page-item"><a class="page-link" id="pageNavLink">0</a></li>

                        <li class="page-item" id="nextPageNavItem">
                            <button id="nextPageBtn" class="page-link">
                                <span class="fa fa-chevron-right"></span>
                            </button>
                        </li>
                    </ul>
                </nav>

                <p id="info-par" class="text-center"></p>
                <ul class="list-group" id="roomsList">
                    <!-- ROOMS -->
                </ul>
                <br />

                <form id="addRoomForm">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Room number</span>
                            </div>
                            <input type="text" name="roomNumber" class="form-control" />
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-primary">Add new room</button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>



<form asp-action="@nameof(Hotel.Controllers.OffersController.Edit)" method="post" id="editOfferForm">
    <!-- Active -->
    <!--<div class="form-group custom-control custom-checkbox">
        <input asp-for="IsActive" class="custom-control-input" />
        <label class="custom-control-label" for="activeCheckbox">
            Active
        </label>
    </div>-->
    <div>
        <dl class="row dl-compact">
            <dt class="col-sm-1">Active</dt>
            <dd class="col-sm-11">
                @if (Model.Offer.IsActive)
                {@:Yes
                }
                else
                {@:No
                }
            </dd>
        </dl>
    </div>
    <hr />

    <input asp-for="Offer.OfferID" hidden />
    <input asp-for="Offer.IsActive" hidden class="custom-control-input" />
    <br />

    <!-- Title -->
    <div class="form-group">
        <input asp-for="Offer.OfferTitle" class="form-control" placeholder="Offer name" />
        <label class="form-control-placeholder">Title</label>
    </div>
    <hr /><br />

    <!-- Description -->
    <div class="form-group">
        <textarea asp-for="Offer.Description" class="form-control" rows="4" placeholder="Write something about this offer!"></textarea>
        <label class="form-control-placeholder">Description</label>
    </div>
    <hr /><br />

    <!-- Preview PIC -->
    <div class="form-group">
        <div class="custom-control custom-checkbox">
            <input asp-for="ChangePreviewPicture" class="custom-control-input" />
            <label class="custom-control-label" for="@Html.IdFor(o => o.ChangePreviewPicture)">Change preview picture</label>
        </div>
        <div class="form-row">
            <input asp-for="Offer.OfferPreviewPicture" type="file" accept="image/*" disabled class="form-control col-sm-4" />
            <label class="form-control-placeholder-file">Preview picture</label>
            <div id="previewGallery">
                @if (!(Model.Offer.OfferPreviewPicture is null) && !string.IsNullOrWhiteSpace(Model.Offer.OfferPreviewPicture))
                {
                    <img src="@Html.Raw(Model.Offer.OfferPreviewPicture)" class="gallery-img" />
                }
            </div>
        </div>
    </div>
    <hr /><br />

    <!-- Additinal PICS-->
    <div class="form-group">
        <div class="custom-control custom-checkbox">
            <input asp-for="ChangeOfferPictures" class="custom-control-input" />
            <label class="custom-control-label" for="@Html.IdFor(o => o.ChangeOfferPictures)">Change additional pictures</label>
        </div>
        <div class="form-row">
            <input asp-for="Offer.Pictures" type="file" accept="image/*" multiple disabled class="form-control col-sm-4" />
            <label class="form-control-placeholder-file">Additional pictures</label>
            <div id="additionalGallery">
                @if (!(Model.Offer.Pictures is null))
                {
                    foreach (string pic in Model.Offer.Pictures)
                    {
                        @:<img src="@Html.Raw(pic)" class="gallery-img" />
                    }
                }
            </div>
        </div>
    </div>
    <hr />

    <div class="row">
        <button type="submit" class="btn btn-primary m-1">Save</button>
        @if (Model.Offer.IsActive)
        {
            <button type="button" class="btn btn-outline-danger m-1" id="changeActiveBtn">Deactivate</button>
        }
        else
        {
            <button type="button" class="btn btn-outline-success m-1" id="changeActiveBtn">Activate</button>
        }
        <button type="button" class="btn btn-outline-info m-1" data-toggle="modal" data-target="#roomsModal">Manage rooms</button>
        <div id="mainLoader" class="loader"></div>
        <button type="button" class="btn btn-danger m-1 ml-auto" id="removeOfferBtn">Remove offer</button>
    </div>
</form>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            let previewPicInput = document.getElementById('@Html.IdFor(o => o.Offer.OfferPreviewPicture)');
            let previewPicChckbox = document.getElementById('@Html.IdFor(o => o.ChangePreviewPicture)');
            let previewGalleryDiv = document.getElementById('previewGallery');

            let additionalPicsInput = document.getElementById('@Html.IdFor(o => o.Offer.Pictures)');
            let additionalPicsChckbox = document.getElementById('@Html.IdFor(o => o.ChangeOfferPictures)');
            let additionalGalleryDiv = document.getElementById('additionalGallery');

            let previewDivHtml = previewGalleryDiv.innerHTML;
            let additionalDivHtml = additionalGalleryDiv.innerHTML;

            previewPicChckbox.onclick = function () { switchEnabled(previewPicChckbox, previewPicInput, previewGalleryDiv, previewDivHtml); };
            previewPicInput.onchange = function () { previewGallery(previewPicInput, previewGalleryDiv); };
            additionalPicsChckbox.onclick = function () { switchEnabled(additionalPicsChckbox, additionalPicsInput, additionalGalleryDiv, additionalDivHtml); };
            additionalPicsInput.onchange = function () { previewGallery(additionalPicsInput, additionalGalleryDiv); };

            let mainLoader = document.getElementById("mainLoader");

            // converting pictures to base64 and sending a form
            let form = document.getElementById('editOfferForm');
            form.onsubmit = async function (e) {
                e.preventDefault();
                let formData = new FormData(form);
                let previewPicString = '@Html.NameFor(o => o.Offer.OfferPreviewPicture)';
                let picsString = '@Html.NameFor(o => o.Offer.Pictures)';

                let previewPic = formData.get(previewPicString);
                if (previewPic) {
                    let previewPic64 = await get64BaseString(previewPic);
                    if (previewPic64) {
                        formData.set(previewPicString, previewPic64);           // .set() overrides value
                    }
                }

                let pics = formData.getAll(picsString);
                formData.delete(picsString);
                for (const pic of pics) {
                    let pic64 = await (get64BaseString(pic));
                    if (pic64) {
                        formData.append(picsString, pic64);
                    }
                }

                await fetchSend(
                    null,
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.Edit))',
                    'POST',
                    formData,
                    "Offer edited successfully!",
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.Details), new { offerID = Model.Offer.OfferID })',
                    mainLoader
                );
            };

            // removing an offer
            $('#removeOfferBtn').on('click', async function () {
                await fetchSend(
                    'Are you sure you want to permanently delete offer "@Model.Offer.OfferTitle"? This action is irreversible!',
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.Delete), new { offerID = Model.Offer.OfferID })',
                    "GET",
                    null,
                    "Offer deleted succesfully",
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.Index))',
                    mainLoader
                )
            });

            // (de)activate offer
            $('#changeActiveBtn').on('click', async function () {
                await fetchSend(
                    'You are about to change \'Active\' status of the offer "@Model.Offer.OfferTitle". Are you sure?',
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.ChangeActive), new { offerID = Model.Offer.OfferID, isActive = !Model.Offer.IsActive })',
                    'POST',
                    null,
                    null,
                    '@Url.Action(nameof(Hotel.Controllers.OffersController.Details), new { offerID = Model.Offer.OfferID })',
                    mainLoader
                );
            });

            // paging and modal window managing
            $('#roomsModal').on('show.bs.modal', function () {
                refreshRoomsModal();
            });

            //room pages managing
            let pageNumber = 1;
            let pageSize = 5;
            $("#pageNavLink").text(pageNumber);
            $("#prevPageNavItem").addClass("disabled");
            document.getElementById("prevPageBtn").onclick = function () {
                pageNumber -= 1;
                refreshRoomsModal();
            }
            document.getElementById("nextPageBtn").onclick = function () {
                pageNumber += 1;
                refreshRoomsModal();
            }

            var pathBase = "@Context.Request.PathBase.ToString()";

            let modal = $('#roomsModal');
            let modalBody = modal.find(".modal-body");
            let roomsList = modal.find('#roomsList');
            let infoPar = modal.find('#info-par');
            let refreshRoomsModal = function () {
                if (pageNumber < 2) {
                    $('#prevPageNavItem').addClass("disabled");
                } else {
                    $('#prevPageNavItem').removeClass("disabled");
                }

                let loadingBox = $('<p></p>')
                    .append($("<img></img>")
                        .addClass("d-block mx-auto mt-2")
                        .attr("style", "width: 75px")
                        .attr("src", `${pathBase}/img/loading.gif`))
                    .append($("<p></p>")
                        .addClass("text-center h5 mt-2")
                        .text("Loading rooms..."));

                infoPar.empty();
                roomsList.empty();
                modalBody.prepend(loadingBox);

                let ajx = $.ajax({
                    url: `@Url.Action(nameof(Hotel.Controllers.OffersController.GetOfferRooms), new { offerID = Model.Offer.OfferID })?pageNumber=${pageNumber}&pageSize=${pageSize}`,
                    success: function (data, textStatus, jqXHR) {
                        if (!data || data.length < 1) {
                            infoPar.text('No rooms.');
                            $("#nextPageNavItem").addClass("disabled");
                        } else {
                            data.forEach(function (room, index) {
                                roomsList.append($('<li></li>') // <li> room element
                                    .addClass("list-group-item d-flex justify-content-between align-items-center")
                                    .text(room.hotelRoomNumber)
                                    .append($("<button></button>")
                                        .addClass("btn btn-sm btn-outline-danger detach-btn")
                                        .attr("type", "button")
                                        .attr("id", room.roomID)
                                        .append($("<span></span>")
                                            .addClass("badge badge-pill")
                                            .text(" Detach")
                                            .prepend($("<i></i>")
                                                .addClass("fa fa-sm fa-unlink"))))
                                );
                            });
                            if (data.length < pageSize) {
                                $("#nextPageNavItem").addClass("disabled");
                            } else {
                                $("#nextPageNavItem").removeClass("disabled");
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        infoPar.text('Unable to get rooms list: ' + textStatus);
                    }
                });
                $.when(ajx).always(function () {
                    loadingBox.empty();
                });
                $("#pageNavLink").text(pageNumber);
            }

            // detaching a room from offer
            $("#roomsModal").on('click', ".detach-btn", function () {
                let btn = $(this);
                let roomID = btn.attr("id");
                $.ajax({
                    url: `${pathBase}/offers/@Model.Offer.OfferID/rooms/${roomID}`,
                    method: "DELETE",
                    success: function (data, textStatus, jqXHR) {
                        alert("Room detached successfully");
                        refreshRoomsModal();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(textStatus + jqXHR.status);
                    }
                })
            });

            // attaching a room to offer
            let addRoomForm = $("#addRoomForm")[0]
            console.log(addRoomForm.elements['roomNumber'].value);
            addRoomForm.onsubmit = function (e) {
                e.preventDefault();
                $.ajax({
                    url: `${pathBase}/offers/@Model.Offer.OfferID/rooms`,
                    method: "POST",
                    data: {
                        "roomNumber": addRoomForm.elements['roomNumber'].value
                    },
                    success: function (data, textStatus, jqXHR) {
                        alert("Room successfully attached to offer.");
                        pageNumber = 1;
                        refreshRoomsModal();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(textStatus + ". Couldn't attach a room. Make sure this room exists in your hotel.");
                    }
                });
            }
        });
    </script>
}
