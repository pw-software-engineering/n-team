// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Database;

namespace Server.Migrations
{
    [DbContext(typeof(ServerDbContext))]
    partial class ServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Server.Database.Models.AvalaibleTimeIntervalDb", b =>
                {
                    b.Property<int>("TimeIntervalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeIntervalID");

                    b.HasIndex("OfferID");

                    b.ToTable("AvalaibleTimeIntervals");
                });

            modelBuilder.Entity("Server.Database.Models.ClientDb", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Server.Database.Models.ClientReservationDb", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<long>("NumberOfAdults")
                        .HasColumnType("bigint");

                    b.Property<long>("NumberOfChildren")
                        .HasColumnType("bigint");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ReservationID");

                    b.HasIndex("ClientID");

                    b.HasIndex("HotelID");

                    b.HasIndex("OfferID");

                    b.HasIndex("RoomID");

                    b.ToTable("ClientReservations");
                });

            modelBuilder.Entity("Server.Database.Models.ClientReviewDb", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<long>("Rating")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReviewID");

                    b.HasIndex("ClientID");

                    b.HasIndex("OfferID");

                    b.ToTable("ClientReviews");
                });

            modelBuilder.Entity("Server.Database.Models.HotelInfoDb", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelPreviewPicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelID");

                    b.ToTable("HotelInfos");
                });

            modelBuilder.Entity("Server.Database.Models.HotelPictureDb", b =>
                {
                    b.Property<int>("PictureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PictureID");

                    b.HasIndex("HotelID");

                    b.ToTable("HotelPictures");
                });

            modelBuilder.Entity("Server.Database.Models.HotelRoomDb", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("HotelRoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("Server.Database.Models.OfferDb", b =>
                {
                    b.Property<int>("OfferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("CostPerAdult")
                        .HasColumnType("float");

                    b.Property<double>("CostPerChild")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MaxGuests")
                        .HasColumnType("bigint");

                    b.Property<string>("OfferPreviewPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfferID");

                    b.HasIndex("HotelID");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Server.Database.Models.OfferHotelRoomDb", b =>
                {
                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("OfferID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("OfferHotelRooms");
                });

            modelBuilder.Entity("Server.Database.Models.OfferPictureDb", b =>
                {
                    b.Property<int>("PictureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PictureID");

                    b.HasIndex("OfferID");

                    b.ToTable("OfferPictures");
                });

            modelBuilder.Entity("Server.Database.Models.AvalaibleTimeIntervalDb", b =>
                {
                    b.HasOne("Server.Database.Models.OfferDb", "Offer")
                        .WithMany("AvalaibleTimeIntervals")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Server.Database.Models.ClientReservationDb", b =>
                {
                    b.HasOne("Server.Database.Models.ClientDb", "Client")
                        .WithMany("ClientReservations")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Server.Database.Models.HotelInfoDb", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Server.Database.Models.OfferDb", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Server.Database.Models.HotelRoomDb", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Hotel");

                    b.Navigation("Offer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Server.Database.Models.ClientReviewDb", b =>
                {
                    b.HasOne("Server.Database.Models.ClientDb", "Client")
                        .WithMany("ClientReviews")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Server.Database.Models.OfferDb", "Offer")
                        .WithMany("ClientReviews")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Server.Database.Models.HotelPictureDb", b =>
                {
                    b.HasOne("Server.Database.Models.HotelInfoDb", "Hotel")
                        .WithMany("HotelPictures")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Server.Database.Models.HotelRoomDb", b =>
                {
                    b.HasOne("Server.Database.Models.HotelInfoDb", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Server.Database.Models.OfferDb", b =>
                {
                    b.HasOne("Server.Database.Models.HotelInfoDb", "Hotel")
                        .WithMany("Offers")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Server.Database.Models.OfferHotelRoomDb", b =>
                {
                    b.HasOne("Server.Database.Models.OfferDb", "Offer")
                        .WithMany("OfferHotelRooms")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Server.Database.Models.HotelRoomDb", "Room")
                        .WithMany("OfferHotelRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Server.Database.Models.OfferPictureDb", b =>
                {
                    b.HasOne("Server.Database.Models.OfferDb", "Offer")
                        .WithMany("OfferPictures")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Server.Database.Models.ClientDb", b =>
                {
                    b.Navigation("ClientReservations");

                    b.Navigation("ClientReviews");
                });

            modelBuilder.Entity("Server.Database.Models.HotelInfoDb", b =>
                {
                    b.Navigation("HotelPictures");

                    b.Navigation("HotelRooms");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("Server.Database.Models.HotelRoomDb", b =>
                {
                    b.Navigation("OfferHotelRooms");
                });

            modelBuilder.Entity("Server.Database.Models.OfferDb", b =>
                {
                    b.Navigation("AvalaibleTimeIntervals");

                    b.Navigation("ClientReviews");

                    b.Navigation("OfferHotelRooms");

                    b.Navigation("OfferPictures");
                });
#pragma warning restore 612, 618
        }
    }
}
